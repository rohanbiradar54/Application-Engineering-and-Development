/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Business.Account;
import Business.AccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rohan
 */
public class ManageAccountJPanel extends javax.swing.JPanel {
    
    private JPanel container;
    private AccountDirectory directory;

    /**
     * Creates new form ManageAccountJPanel
     */
    public ManageAccountJPanel() {
        
    }

    ManageAccountJPanel(JPanel container, AccountDirectory directory) {
        initComponents();
        this.container= container;
        this.directory=directory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAccounts = new javax.swing.JTable();
        buttonDelete = new javax.swing.JButton();
        textAccountNumber = new javax.swing.JTextField();
        labelManageAccount = new javax.swing.JLabel();
        buttonViewDetail = new javax.swing.JButton();
        buttonSearch = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();

        tableAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bank Name", "Routing Number", "Account Number", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAccounts);
        if (tableAccounts.getColumnModel().getColumnCount() > 0) {
            tableAccounts.getColumnModel().getColumn(0).setResizable(false);
            tableAccounts.getColumnModel().getColumn(1).setResizable(false);
            tableAccounts.getColumnModel().getColumn(2).setResizable(false);
            tableAccounts.getColumnModel().getColumn(3).setResizable(false);
        }

        buttonDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonDelete.setText("Delete");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        labelManageAccount.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        labelManageAccount.setText("Manage Account");

        buttonViewDetail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonViewDetail.setText("View Detail");
        buttonViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewDetailActionPerformed(evt);
            }
        });

        buttonSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonSearch.setText("Search ");
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        buttonBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonBack.setText("<Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(buttonBack)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(412, 412, 412)
                        .addComponent(labelManageAccount))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(buttonSearch)
                                .addGap(63, 63, 63)
                                .addComponent(textAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(453, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(buttonDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonViewDetail)
                .addGap(281, 281, 281))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(labelManageAccount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(buttonBack)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSearch))
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonViewDetail)
                    .addComponent(buttonDelete))
                .addContainerGap(114, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        
        container.remove(this);
        CardLayout layout=(CardLayout) container.getLayout();
        layout.previous(container);
        populateTable();
        
        
        
        
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRow=tableAccounts.getSelectedRow();
        if(selectedRow >=0){
            int dialogButton=JOptionPane.YES_NO_OPTION;
            int dialogResult=JOptionPane.showConfirmDialog(null, "Would you like to delete the account details?", "Warning", dialogButton);
            
            if(dialogResult==JOptionPane.YES_OPTION){
                Account account= (Account) tableAccounts.getValueAt(selectedRow, 0);
                directory.deleteAccount(account);
                populateTable();
            }
            
            
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from table first!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewDetailActionPerformed
        // TODO add your handling code here:
        int selectedRow=tableAccounts.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first to view details!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{ 
            Account account = (Account) tableAccounts.getValueAt(selectedRow, 0);
            viewAccountJpanel panel = new viewAccountJpanel(container,account,directory);
            container.add("ViewAccountJPanel",panel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
           
        }
        
        
    }//GEN-LAST:event_buttonViewDetailActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        // TODO add your handling code here:
        Account result = directory.searchAccount(textAccountNumber.getText());
        if(result == null){
            JOptionPane.showMessageDialog(null, "Account number you entered does not exist!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            viewAccountJpanel panel = new viewAccountJpanel(container, result,directory);
            container.add("viewAccountJPanel",panel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        }
        
        
        
        
        
        
    }//GEN-LAST:event_buttonSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonViewDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelManageAccount;
    private javax.swing.JTable tableAccounts;
    private javax.swing.JTextField textAccountNumber;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm= (DefaultTableModel) tableAccounts.getModel();
        dtm.setRowCount(0);
        for(Account account: directory.getAccountList()){
            Object[] row = new Object[4];
            row[0]=account;
            row[1]=account.getRoutingNumber();
            row[2]=account.getAccountNumber();
            row[3]=account.getBalance();
           
            dtm.addRow(row);
            
        }
        
    }
}
